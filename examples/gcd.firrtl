;buildInfoPackage: chisel3, version: 3.3.2, scalaVersion: 2.12.11, sbtVersion: 1.3.10
circuit GCD : 
  module GCD : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<16>, flip b : UInt<16>, flip e : UInt<1>, z : UInt<16>, v : UInt<1>}
    
    reg x : UInt, clock @[GCD.scala 36:15]
    reg y : UInt, clock @[GCD.scala 37:15]
    node _T = gt(x, y) @[GCD.scala 39:10]
    when _T : @[GCD.scala 39:15]
      node _T_1 = sub(x, y) @[GCD.scala 39:24]
      node _T_2 = tail(_T_1, 1) @[GCD.scala 39:24]
      x <= _T_2 @[GCD.scala 39:19]
      skip @[GCD.scala 39:15]
    else : @[GCD.scala 40:16]
      node _T_3 = sub(y, x) @[GCD.scala 40:25]
      node _T_4 = tail(_T_3, 1) @[GCD.scala 40:25]
      y <= _T_4 @[GCD.scala 40:20]
      skip @[GCD.scala 40:16]
    when io.e : @[GCD.scala 42:14]
      x <= io.a @[GCD.scala 43:7]
      y <= io.b @[GCD.scala 44:7]
      skip @[GCD.scala 42:14]
    io.z <= x @[GCD.scala 47:8]
    node _T_5 = eq(y, UInt<1>("h00")) @[GCD.scala 48:13]
    io.v <= _T_5 @[GCD.scala 48:8]
    
